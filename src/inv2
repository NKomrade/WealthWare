// import React, { useState, useEffect } from 'react';
// import { collection, addDoc, getDocs } from 'firebase/firestore';
// import { getAuth, onAuthStateChanged } from 'firebase/auth';
// import { db } from '../firebase';

// const Inventory = () => {
//   const [showModal, setShowModal] = useState(false); 
//   const [products, setProducts] = useState([]);
//   const [purchaseOrders, setPurchaseOrders] = useState([]);

//   const [productData, setProductData] = useState({
//     skuId: '',
//     name: '',
//     companyName: '',
//     price: '',
//     quantity: '',
//     description: '',
//     purchaseDate: '',
//   });

//   const auth = getAuth();
//   const [user, setUser] = useState(null);

//   useEffect(() => {
//     const unsubscribe = onAuthStateChanged(auth, (currentUser) => {
//       if (currentUser) {
//         setUser(currentUser);
//         fetchProducts(currentUser);
//         fetchPurchaseOrders(currentUser);
//       } else {
//         console.warn('No user is currently logged in.');
//       }
//     });

//     return () => unsubscribe();
//   }, []);

//   const fetchProducts = async (currentUser) => {
//     try {
//       const productsRef = collection(db, `users/${currentUser.uid}/products`);
//       const querySnapshot = await getDocs(productsRef);
//       const userProducts = querySnapshot.docs.map((doc) => doc.data());
//       setProducts(userProducts);
//     } catch (error) {
//       console.error('Error fetching products: ', error);
//     }
//   };

//   const fetchPurchaseOrders = async (currentUser) => {
//     try {
//       const poRef = collection(db, `users/${currentUser.uid}/purchaseOrders`);
//       const querySnapshot = await getDocs(poRef);
//       const userPOs = querySnapshot.docs.map((doc) => doc.data());
//       setPurchaseOrders(userPOs);
//     } catch (error) {
//       console.error('Error fetching purchase orders: ', error);
//     }
//   };

//   const handleChange = (e) => {
//     const { name, value } = e.target;
//     setProductData({ ...productData, [name]: value });
//   };

//   const openModal = () => {
//     const todayDate = new Date().toISOString().split('T')[0];
//     setProductData({
//       ...productData,
//       purchaseDate: todayDate,
//     });
//     setShowModal(true);
//   };

//   const closeModal = () => setShowModal(false);

//   const handleSubmit = async (e) => {
//     e.preventDefault();
//     if (!user) {
//       console.error('No user logged in.');
//       return;
//     }
//     try {
//       await addDoc(collection(db, `users/${user.uid}/products`), productData);
//       setProducts([...products, productData]);
//       setProductData({
//         skuId: '',
//         name: '',
//         companyName: '',
//         price: '',
//         quantity: '',
//         description: '',
//         purchaseDate: '',
//       });
//       setShowModal(false);
//     } catch (error) {
//       console.error('Error adding product: ', error);
//     }
//   };

//   return (
//     <div className="p-8">
//       <h2 className="text-2xl font-bold mb-4">Inventory Management</h2>
//       <div className="mb-4">
//         <button onClick={openModal} className="bg-blue-500 text-white px-4 py-2 rounded mr-4">
//           Add Inventory
//         </button>
//         <button className="bg-green-500 text-white px-4 py-2 rounded">
//           Generate PO
//         </button>
//       </div>

//       <h3 className="text-xl font-semibold">Inventory List</h3>
//       <table className="w-full mt-4 border-collapse border border-gray-400">
//         <thead className="bg-gray-700 text-white">
//           <tr>
//             <th className="border border-gray-300 p-2">SKU ID</th>
//             <th className="border border-gray-300 p-2">Company Name</th>
//             <th className="border border-gray-300 p-2">Product Name</th>
//             <th className="border border-gray-300 p-2">Price</th>
//             <th className="border border-gray-300 p-2">Quantity</th>
//             <th className="border border-gray-300 p-2">Description</th>
//             <th className="border border-gray-300 p-2">Purchase Date</th>
//           </tr>
//         </thead>
//         <tbody className="bg-gray-100">
//           {products.length > 0 ? (
//             products.map((product, index) => (
//               <tr key={index}>
//                 <td className="border border-gray-300 p-2">{product.skuId}</td>
//                 <td className="border border-gray-300 p-2">{product.companyName}</td>
//                 <td className="border border-gray-300 p-2">{product.name}</td>
//                 <td className="border border-gray-300 p-2">₹ {product.price}</td>
//                 <td className="border border-gray-300 p-2">{product.quantity}</td>
//                 <td className="border border-gray-300 p-2">{product.description}</td>
//                 <td className="border border-gray-300 p-2">{product.purchaseDate}</td>
//               </tr>
//             ))
//           ) : (
//             <tr>
//               <td colSpan="7" className="text-center p-2">
//                 No products available
//               </td>
//             </tr>
//           )}
//         </tbody>
//       </table>

//       <h3 className="text-xl font-semibold mt-8">Purchase Orders</h3>
//       <table className="w-full mt-4 border-collapse border border-gray-400">
//         <thead className="bg-gray-700 text-white">
//           <tr>
//             <th className="border border-gray-300 p-2">PO ID</th>
//             <th className="border border-gray-300 p-2">Company Name</th>
//             <th className="border border-gray-300 p-2">Supplier Address</th>
//             <th className="border border-gray-300 p-2">State</th>
//             <th className="border border-gray-300 p-2">Brand Name</th>
//             <th className="border border-gray-300 p-2">Brand Product</th>
//             <th className="border border-gray-300 p-2">Quantity</th>
//             <th className="border border-gray-300 p-2">Cost Price</th>
//           </tr>
//         </thead>
//         <tbody className="bg-gray-100">
//           {purchaseOrders.length > 0 ? (
//             purchaseOrders.map((po, index) => (
//               <tr key={index}>
//                 <td className="border border-gray-300 p-2">{po.poId}</td>
//                 <td className="border border-gray-300 p-2">{po.companyName}</td>
//                 <td className="border border-gray-300 p-2">{po.supplierAddress}</td>
//                 <td className="border border-gray-300 p-2">{po.state}</td>
//                 {po.items.map((item, itemIndex) => (
//                   <tr key={itemIndex}>
//                     <td className="border border-gray-300 p-2">{item.brandName}</td>
//                     <td className="border border-gray-300 p-2">{item.brandProduct}</td>
//                     <td className="border border-gray-300 p-2">{item.quantity}</td>
//                     <td className="border border-gray-300 p-2">₹ {item.costPrice}</td>
//                   </tr>
//                 ))}
//               </tr>
//             ))
//           ) : (
//             <tr>
//               <td colSpan="8" className="text-center p-2">
//                 No purchase orders available
//               </td>
//             </tr>
//           )}
//         </tbody>
//       </table>

//       {showModal && (
//         <div className="fixed top-0 left-0 w-full h-full flex items-center justify-center bg-gray-900 bg-opacity-50">
//           <div className="bg-white p-6 rounded-lg w-1/3">
//             <h2 className="text-2xl mb-4">Add Inventory</h2>
//             <form onSubmit={handleSubmit} className="grid grid-cols-2 gap-4">
//               <div>
//                 <label className="block mb-2">SKU ID</label>
//                 <input
//                   name="skuId"
//                   value={productData.skuId}
//                   placeholder="Enter SKU ID"
//                   onChange={handleChange}
//                   required
//                   className="border w-full p-2"
//                 />
//               </div>
//               <div>
//                 <label className="block mb-2">Purchase Date</label>
//                 <input
//                   type="date"
//                   name="purchaseDate"
//                   value={productData.purchaseDate}
//                   readOnly
//                   className="border w-full p-2 bg-gray-100"
//                 />
//               </div>
//               <div>
//                 <label className="block mb-2">Company Name</label>
//                 <input
//                   name="companyName"
//                   placeholder="Enter company name"
//                   onChange={handleChange}
//                   required
//                   className="border w-full p-2"
//                 />
//               </div>
//               <div>
//                 <label className="block mb-2">Product Name</label>
//                 <input
//                   name="name"
//                   placeholder="Enter product name"
//                   onChange={handleChange}
//                   required
//                   className="border w-full p-2"
//                 />
//               </div>
//               <div>
//                 <label className="block mb-2">Price</label>
//                 <input
//                   name="price"
//                   placeholder="Enter price"
//                   type="number"
//                   onChange={handleChange}
//                   required
//                   className="border w-full p-2"
//                 />
//               </div>
//               <div>
//                 <label className="block mb-2">Quantity</label>
//                 <input
//                   name="quantity"
//                   placeholder="Enter quantity"
//                   type="number"
//                   onChange={handleChange}
//                   required
//                   className="border w-full p-2"
//                 />
//               </div>
//               <div className="col-span-2">
//                 <label className="block mb-2">Description</label>
//                 <textarea
//                   name="description"
//                   placeholder="Enter product description"
//                   onChange={handleChange}
//                   required
//                   className="border w-full p-2"
//                 />
//               </div>
//               <div className="col-span-2 flex justify-end">
//                 <button
//                   type="button"
//                   onClick={closeModal}
//                   className="bg-red-500 text-white px-4 py-2 rounded mr-2"
//                 >
//                   Cancel
//                 </button>
//                 <button
//                   type="submit"
//                   className="bg-blue-500 text-white px-4 py-2 rounded"
//                 >
//                   Save
//                 </button>
//               </div>
//             </form>
//           </div>
//         </div>
//       )}
//     </div>
//   );
// };

// export default Inventory;